name: Ns3
on: 
 push:

jobs:
  ns-3_c-v2x:
   runs-on: ubuntu-latest-8-cores
   container:
    image: python:3.6
    options: --user root
   steps:
     - name: checkout code
       uses: actions/checkout@v2 # This action to checkout the code
     - name: Install Deps
       run: |
         apt update
         apt-get -y install sudo wget curl gnupg lsb-release gcovr unzip
         sudo apt-get -y install software-properties-common
         sudo apt-get update -qy
         sudo apt-get install -y build-essential gcc g++
     - name: set up Cmake
       uses: jwlawson/actions-setup-cmake@v1.13  # this action is used to setup and install Cmake with required versions
       with:
         cmake-version: '3.16'  
     - name: install g++
       run: |
         sudo apt-get -y install build-essential
         sudo apt -y install cmake g++ libprotobuf-dev protobuf-compiler
         sudo apt -y install apt-transport-https ca-certificates curl software-properties-common
         export CXX="g++"          
     - name: Install sonar-scanner and build-wrapper
       uses: SonarSource/sonarcloud-github-c-cpp@v1  # This Action Installs sonar cloud and build wrapper to run sonar scan analysis  
     - name: Build and Generate test coverage
       continue-on-error: true
       run: |
         cd $GITHUB_WORKSPACE
         chmod   755  -R /__w/ns-3_c-v2x/ns-3_c-v2x
         python3.6 -x waf configure --enable-examples --enable-tests
         python3.6 -x waf build
     - name: Test Python Code
       run: |
         cd $GITHUB_WORKSPACE
         python3.6 -x test.py || true # Ignore test failures and continue                
     - name: Archive code coverage results
       uses: actions/upload-artifact@v3 # This action is used to capture the test artifacts and exits if no files are found
       with:
         name: ns-3_c-v2x
         path: /__w/ns-3_c-v2x/ns-3_c-v2x/build
         if-no-files-found: error                    
     - name: Setup SonarScanner
       uses: warchant/setup-sonar-scanner@v4 # This action is used to setup sonar scanner with required versions.
       with:
         version: 4.8.0.2856
     - name: Generate sonar properties file
       run: |
         cat <<EOF > /tmp/sonar-scanner.properties
         sonar.host.url=https://sonarcloud.io
         sonar.projectName=ns-3_c-v2x
         sonar.projectVersion=1.0
         sonar.projectKey=usdot-fhwa-stol_ns-3-c-v2x
         sonar.organization=usdot-fhwa-stol
         sonar.sources=.
         sonar.exclusions=src/ppm.cpp
         sonar.cfamily.compile-commands=/__w/ns-3_c-v2x/ns-3_c-v2x/build/compile_commands.json
         sonar.sonar.projectBaseDir=/home/runner/work/ns-3_c-v2x/ns-3_c-v2x/
         # Set Git as SCM sensor
         sonar.scm.disabled=true
         #sonar.scm.enabled=false
         sonar.scm.provider=git
         sonar.sourceEncoding=UTF-8
         EOF
     - name: Run SonarScanner
       uses: usdot-fhwa-stol/actions/sonar-scanner@main # This action runs the analysis using generated sonar gcov files and publish reports to respective sonarcloud project.
       with:
         sonar-properties-path: /tmp/sonar-scanner.properties
         sonar-token: ${{ secrets.SONAR_TOKEN }}
         working-dir: $GITHUB_WORKSPACE                 